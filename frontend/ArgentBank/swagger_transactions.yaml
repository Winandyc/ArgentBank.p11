openapi: 3.0.3
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '2.0.0' # Nouvelle version de l'API
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v2 # Mise à jour du chemin de base pour la nouvelle version
schemes:
  - http
paths:
  /auth/login:
    post:
      tags:
        - Authentification
      summary: User Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

# Méthode HTTP : POST
# Route : /auth/login
# Description : API for Login
# Paramètres possibles :
#   - in: body
#     name: body
#     description: Login Payload
#     required: true
#     schema:
#       $ref: '#/definitions/Login'
# Réponses possibles :
#   - '200':
#       description: Login Successfully
#       schema:
#         $ref: '#/definitions/LoginResponse'
#   - '400':
#       description: Invalid Fields
#   - '500':
#       description: Internal Server Error

  /auth/signup:
    post:
      tags:
        - Authentification
      summary: User Signup
      description: API for user Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

# Méthode HTTP : POST
# Route : /auth/signup
# Description : API for user Signup
# Paramètres possibles :
#   - in: body
#     name: body
#     description: Signup Payload
#     required: true
#     schema:
#       $ref: '#/definitions/User'
# Réponses possibles :
#   - '200':
#       description: Signup Successfully
#       schema:
#         $ref: '#/definitions/ApiResponse'
#   - '400':
#       description: Invalid Fields
#   - '500':
#       description: Internal Server Error

  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
      # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

# Méthode HTTP : POST
# Route : /user/profile
# Description : API for fetching a user profile
# Sécurité : Bearer token requis
# Réponses possibles :
#   - '200':
#       description: User profile retrieved successfully
#       schema:
#         $ref: '#/definitions/ApiResponse'
#   - '400':
#       description: Invalid Fields
#   - '500':
#       description: Internal Server Error

# Méthode HTTP : PUT
# Route : /user/profile
# Description : API for updating a user profile
# Sécurité : Bearer token requis
# Paramètres possibles :
#   - in: body
#     name: body
#     description: Update user profile attributes
#     required: true
#     schema:
#       $ref: '#/definitions/UserProfile'
# Réponses possibles :
#   - '200':
#       description: User profile retrieved successfully
#       schema:
#         $ref: '#/definitions/ApiResponse'
#   - '400':
#       description: Invalid Fields
#   - '500':
#       description: Internal Server Error


  # Route pour récupérer (get) les transactions du mois en cours.
  /accounts/{accoutID}/transactions/current:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch current month transactions
      description: Fetch transactions for the current month.
      parameters:
        - in: path
          name: accountID
          description: Unique account ID
          required: true
          type: string
        # Ajout d'une option de fonctionnalité Triage des transactions par catégorie
        - in: query
          name: sortByCategory
          description: Sort transactions by category (optional)
          required: false
          type: boolean
        - in: query
          name: category
          description: Category to filter transactions (optional)
          required: false
          type: string
        - in: query
          name: startDate
          description: Start date for filtering transactions (optional)
          required: false
          type: string
        - in: query
          name: endDate
          description: End date for filtering transactions (optional)
          required: false
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account's transactions fetched successfully for the current month
          content:
            application/json:
              schema:
                oneof:
                  $ref: '#/definitions/UserAccountList'
                  $ref: '#/defintions/SortByCategoryResponse'
        '400':
          description: Bad request - Invalid fields
          examples:
            application/json:
              description: Example of a query with invalid fields
              value:
                status: 400
                message: Invalid fields
        '401':
          description: Unauthorized - Authentification failed
          examples:
            application/json:
              description: Example of a query with a missing token
              value:
              statue: 401
              message: Token is missing from header
        '404':
          description: No transaction found for the specified month and account
          examples:
            application/json:
              description: Example of query without a transaction
              value:
                status: 404
                message: No transaction found
        '500':
          description: Interval Server Error - Something went wrong
          examples:
            application/json:
              description: Example of query with an internal server error
              value: 500
              message: Internal Server Error

      examples:
        application/json:
          description: Example of query for sort by category
          value:
            sortByCategory: true
            category: category-name

      x-code-samples:
        - lang: shell
          label: cURL
          source: |
            curl -X GET "http://localhost:3001/api/v2/accounts/{accountID}/transactions/current?sortByCategory=true&category=category-name" -H "Authorization: Bearer <token>"

            # Request URL
            # http://localhost:3001/api/v2/accounts/{accountID}/transactions/current?sortByCategory=true&category=category-name

# Méthode HTTP : GET
# Route : /accounts/{accountID}/transactions/current
# Description : Fetch transactions for the current month
# Sécurité : Bearer token requis
# Paramètres possibles :
#   - in: path
#     name: accountID
#     description: Unique account ID
#     required: true
#     type: string
#   - in: query
#     name: sortByCategory
#     description: Sort transactions by category (optional)
#     required: false
#     type: boolean
#   - in: query
#     name: category
#     description: Category to filter transactions (optional)
#     required: false
#     type: string
#   - in: query
#     name: startDate
#     description: Start date for filtering transactions (optional)
#     required: false
#     type: string
#   - in: query
#     name: endDate
#     description: End date for filtering transactions (optional)
#     required: false
#     type: string
# Réponses possibles :
#   - '200':
#       description: Account's transactions fetched successfully for the current month
#       content:
#         application/json:
#           schema:
#             oneof:
#               $ref: '#/definitions/UserAccountList'
#               $ref: '#/defintions/SortByCategoryResponse'
#   - '400':
#       description: Bad request - Invalid fields
#       examples:
#         application/json:
#           description: Example of a query with invalid fields
#           value:
#             status: 400
#             message: Invalid fields
#   - '401':
#       description: Unauthorized - Authentification failed
#       examples:
#         application/json:
#           description: Example of a query with a missing token
#           value:
#             statue: 401
#             message: Token is missing from header
#   - '404':
#       description: No transaction found for the specified month and account
#       examples:
#         application/json:
#           description: Example of query without a transaction
#           value:
#             status: 404
#             message: No transaction found
#   - '500':
#       description: Interval Server Error - Something went wrong
#       examples:
#         application/json:
#           description: Example of query with an internal server error
#           value:
#             status: 500
#             message: Internal Server Error
# Exemples possibles :
#   - application/json:
#       description: Example of query for sort by category
#       value:
#         sortByCategory: true
#         category: category-name
# Exemples de code :
#   - lang: shell
#     label: cURL
#     source: |
#       curl -X GET "http://localhost:3001/api/v2/accounts/{accountID}/transactions/current?sortByCategory=true&category=category-name" -H "Authorization: Bearer <token>"

#       # Request URL
#       # http://localhost:3001/api/v2/accounts/{accountID}/transactions/current?sortByCategory=true&category=category-name


  # Route pour récupérer les détails d'une transaction spécifique et mise à jour des details d'une transaction.
  /accounts/{accountID}/transactions/{transactionID}:
  get:
    security:
      - Bearer: [] # Sécurité avec jeton d'authentification
    tags:
      - Transactions Module # Module Transactions
    summary: Fetch details of a specific transaction # Résumé : Récupérer les détails d'une transaction spécifique
    description: Fetch details from a specific transaction. # Description : Récupérer les détails d'une transaction spécifique
    parameters:
      - in: path
        name: accountID
        description: Unique account ID # ID de compte unique
        required: true
        type: string
      - in: path
        name: transactionID
        description: Unique transaction ID # ID de transaction unique
        required: true
        type: string
    produces:
      - application/json
    responses:
      '200':
        description: Transaction details fetched successfully # Détails de la transaction récupérés avec succès
        schema:
          $ref: '#definitions/Transaction'
      '400':
        description: Bad request - Invalid fields # Requête incorrecte - Champs invalides
      '401':
        description: Unauthorized - Authentification failed # Non autorisé - Échec d'authentification
      '404':
        description: Transaction or Account not found # Transaction ou compte non trouvé
      '500':
        description: Internal Server Error - Something went wrong # Erreur interne du serveur - Quelque chose s'est mal passé
  put:
    security:
      - Bearer: [] # Sécurité avec jeton d'authentification
    tags:
      - Transactions Module # Module Transactions
    summary: Update details of a specific transaction # Résumé : Mettre à jour les détails d'une transaction spécifique
    description: Update details of a specific transaction. # Description : Mettre à jour les détails d'une transaction spécifique
    parameters:
      - in: path
        name: accountID
        description: Unique account ID # ID de compte unique
        required: true
        type: string
      - in: path
        name: transactionID
        description: Unique transaction ID # ID de transaction unique
        required: true
        type: string
      - in: body
        name: transactionID
        description: New details for the transaction # Nouveaux détails pour la transaction
        required: true
        schema:
          $ref: '#/definitions/TransactionUpdate'
    produces:
      - application/json
    responses:
      '200':
        description: Transaction details updated successfully # Détails de la transaction mis à jour avec succès
        schema:
          $ref: '#/definitions/ApiResponse'
      '400':
        description: Bad request - Invalid fields # Requête incorrecte - Champs invalides
      '401':
        description: Unauthorized - Authentification failed # Non autorisé - Échec d'authentification
      '404':
        description: Transaction or Account not found # Transaction ou compte non trouvé
      '500':
        description: Internal Server Error - Something went wrong # Erreur interne du serveur - Quelque chose s'est mal passé
